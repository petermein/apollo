services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: apollo
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - apollo_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    volumes:
      - api_data:/app/data
      - ./configs/api.yaml:/app/config.yaml:ro
    networks:
      - apollo_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 2s
      timeout: 10s
      retries: 5

  operator-1:
    build:
      context: .
      dockerfile: Dockerfile.operator
    environment:
      - OPERATOR_ID=operator-1
    volumes:
      - operator_1_data:/app/data
      - ./configs/operator.yaml:/app/config.yaml:ro
    networks:
      - apollo_network
    depends_on:
      api:
        condition: service_healthy

  operator-2:
    build:
      context: .
      dockerfile: Dockerfile.operator
    environment:
      - OPERATOR_ID=operator-2
    volumes:
      - operator_2_data:/app/data
      - ./configs/operator.yaml:/app/config.yaml:ro
    networks:
      - apollo_network
    depends_on:
      api:
        condition: service_healthy

  cli:
    build:
      context: .
      dockerfile: Dockerfile.cli
    volumes:
      - ${HOME}/.apollo-cli:/app/config
      - ./configs/cli.yaml:/app/config.yaml:ro
    networks:
      - apollo_network
    depends_on:
      api:
        condition: service_healthy
    command: ["--config", "/app/config.yaml"]

networks:
  apollo_network:
    driver: bridge

volumes:
  api_data:
  operator_1_data:
  operator_2_data:
  mysql_data: 